from Crypto.Util.number import *
from gmpy2 import isqrt

N = 19940531570269714063140798450990937584352315893851846847107839374489876392518582168579714825563177919563717218101875773085299148000225515884805705539384522396354920768893760620676341191679761858509768862955356002282489391130807536026978451541934441735775197443939984109641919395468449725539592786457230137232273225894649354236169058569603095898269304963470594093778907931541153098289709026585051571242436416283876763350194406710251595805598028736419338691519683789222144562660562833591637160328554892051774155932413167595746100907667177795594432457336642239057209497010459325900451550157462159487268291342993505631979
e = 65537
c = 17371890806336727106608510394141521000037765327123301337682480629630972191735389690486255549075513279821605247527338807428211282671884061453097234048972018401516131619545377777651386513487520109659644892671510315285568622346424489798474431056556821914667055047914698059019651336841558772052857659763822540210820714466907475935946145681070376821408739692617158724683891077441520892835476920078808257925557678184468016766257436687794501914744048857053721144129822585196913597197840926015111127163842318241740221541737520921870907656605628310191432330731449027589921899050685961150038894225815870515480614972570602746378

def fermat(n):
	t0=isqrt(n)+1
	counter=0
	t=t0+counter
	temp=isqrt((t*t)-n)
	while((temp*temp)!=((t*t)-n)):
		counter+=1
		t=t0+counter
		temp=isqrt((t*t)-n)
	s=temp
	p=t+s
	q=t-s
	return p,q

p, q = fermat(N)

phi = (p-1) * (q-1)
d = inverse(e, phi)

flag = pow(c, d, N)
print(long_to_bytes(flag).decode())